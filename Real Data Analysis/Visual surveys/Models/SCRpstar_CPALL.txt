
model {

  #Prior for spatial decay
  sigma ~ dunif(0,100)
  alpha1 <- 1/(2*sigma*sigma)
  #Prior for each grid cell (set b[1:Gpts] = rep(1,Gpts) below so as to be a uniform prior across all cells)
  pi[1:Gpts] ~ ddirch(b[1:Gpts])
  
  for(l in 1:L){   # 4 size categories
    #Prior for intercept
    p0[l] ~ dunif(0,5)
      
    for(t in 1:nproj){  # 9 projects
      #Prior for N
      #Posterior conditional distribution for N-n (and hence N):
      n0[l,t] ~ dnegbin(pstar[l,t],ngroup[l,t])  # number of failures to observe by project and size category
      Ngroup[l,t] <- ngroup[l,t] + n0[l,t]       # number of animals observed + failures to observe by size category
    } #T
  } #L

  for(t in 1:nproj){
    N[t] <- sum(Ngroup[1:L,t])  # successful observations plus failures to observe of each size = total N
  }

  for(t in 1:nproj){
    for(l in 1:L){  # size category
      for(g in 1:Gpts){ # number of points on integration grid
        for(j in 1:J){  # number of survey points
          #Probability of an individual of size i being missed at grid cell g and trap j multiplied by total effort (K) at that location
          miss_allK[l,g,j,t] <- pow((1 - p0[l]*exp(-alpha1*Gdist[g,j]*Gdist[g,j])),K[j,t])
        } #J
        #Probability of detecting each size category across all points in the study area and time period
        pdot.temp[l,g,t] <- 1 - prod(miss_allK[l,g,,t]) 
        pdot[l,g,t] <- max(pdot.temp[l,g,t], 1.0E-10)  # pdot.temp is very close to zero and will lock model up with out this
      } #G
      #Probability of detecting a size category at least once in S (a=area of each integration grid, given as data)
      pstar[l,t] <- (sum(pdot[l,1:Gpts,t]*a[1:Gpts]))/A
      
      #Zero trick for initial 1/pstar^n, described in King et al. 2016
      loglikterm[l,t] <- -ngroup[l,t] * log(pstar[l,t])
      lambda[l,t] <- -loglikterm[l,t] + 10000
      dummy[l,t] ~ dpois(lambda[l,t]) # dummy = 0; entered as data
    } #L

    for(i in 1:nFound[t]){  # maximum number of observed individuals for each project
      #Define activity centers on a grid
      s[i,t] ~ dcat(pi[1:Gpts])

      #Model for capture histories of observed individuals:
      for(j in 1:J){
        y[i,j,t] ~ dpois(p[i,j,t]*K[j,t])
        p[i,j,t] <- p0[size[i,t]]*exp(-alpha1*Gdist[s[i,t],j]*Gdist[s[i,t],j])
      }#J
    }#I

    #Derived proportion of each size class
    for(l in 1:L){
      piGroup[l,t] <- Ngroup[l,t]/N[t]
    }#L
  }#T
}

